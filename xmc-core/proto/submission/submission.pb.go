// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xmc-dev/xmc/xmc-core/proto/submission/submission.proto

/*
Package submission is a generated protocol buffer package.

It is generated from these files:
	github.com/xmc-dev/xmc/xmc-core/proto/submission/submission.proto

It has these top-level messages:
	StateValue
	Submission
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package submission

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import xmc_srv_core_result "github.com/xmc-dev/xmc/xmc-core/proto/result"
import xmc_srv_core_searchmeta "github.com/xmc-dev/xmc/xmc-core/proto/searchmeta"
import xmc_srv_core_tsrange "github.com/xmc-dev/xmc/xmc-core/proto/tsrange"
import xmc_srv_dispatcher_job "github.com/xmc-dev/xmc/dispatcher-srv/proto/job"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_WAITING    State = 0
	State_PROCESSING State = 1
	State_DONE       State = 2
)

var State_name = map[int32]string{
	0: "WAITING",
	1: "PROCESSING",
	2: "DONE",
}
var State_value = map[string]int32{
	"WAITING":    0,
	"PROCESSING": 1,
	"DONE":       2,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StateValue struct {
	Value State `protobuf:"varint,1,opt,name=value,enum=xmc.srv.core.submission.State" json:"value,omitempty"`
}

func (m *StateValue) Reset()                    { *m = StateValue{} }
func (m *StateValue) String() string            { return proto.CompactTextString(m) }
func (*StateValue) ProtoMessage()               {}
func (*StateValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StateValue) GetValue() State {
	if m != nil {
		return m.Value
	}
	return State_WAITING
}

type Submission struct {
	Id           string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TaskId       string                      `protobuf:"bytes,2,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	DatasetId    string                      `protobuf:"bytes,3,opt,name=dataset_id,json=datasetId" json:"dataset_id,omitempty"`
	AttachmentId string                      `protobuf:"bytes,4,opt,name=attachment_id,json=attachmentId" json:"attachment_id,omitempty"`
	EvalId       string                      `protobuf:"bytes,5,opt,name=eval_id,json=evalId" json:"eval_id,omitempty"`
	Result       *xmc_srv_core_result.Result `protobuf:"bytes,6,opt,name=result" json:"result,omitempty"`
	CreatedAt    *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	FinishedAt   *google_protobuf1.Timestamp `protobuf:"bytes,8,opt,name=finished_at,json=finishedAt" json:"finished_at,omitempty"`
	State        State                       `protobuf:"varint,9,opt,name=state,enum=xmc.srv.core.submission.State" json:"state,omitempty"`
	Language     string                      `protobuf:"bytes,10,opt,name=language" json:"language,omitempty"`
	BuildCommand string                      `protobuf:"bytes,11,opt,name=build_command,json=buildCommand" json:"build_command,omitempty"`
	UserId       string                      `protobuf:"bytes,12,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *Submission) Reset()                    { *m = Submission{} }
func (m *Submission) String() string            { return proto.CompactTextString(m) }
func (*Submission) ProtoMessage()               {}
func (*Submission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Submission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Submission) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Submission) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Submission) GetAttachmentId() string {
	if m != nil {
		return m.AttachmentId
	}
	return ""
}

func (m *Submission) GetEvalId() string {
	if m != nil {
		return m.EvalId
	}
	return ""
}

func (m *Submission) GetResult() *xmc_srv_core_result.Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Submission) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Submission) GetFinishedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

func (m *Submission) GetState() State {
	if m != nil {
		return m.State
	}
	return State_WAITING
}

func (m *Submission) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Submission) GetBuildCommand() string {
	if m != nil {
		return m.BuildCommand
	}
	return ""
}

func (m *Submission) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CreateRequest struct {
	TaskId   string `protobuf:"bytes,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Code     []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Language string `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *CreateRequest) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *CreateRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type CreateResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadRequest struct {
	Id                 string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	IncludeResult      bool   `protobuf:"varint,2,opt,name=include_result,json=includeResult" json:"include_result,omitempty"`
	IncludeTestResults bool   `protobuf:"varint,3,opt,name=include_test_results,json=includeTestResults" json:"include_test_results,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadRequest) GetIncludeResult() bool {
	if m != nil {
		return m.IncludeResult
	}
	return false
}

func (m *ReadRequest) GetIncludeTestResults() bool {
	if m != nil {
		return m.IncludeTestResults
	}
	return false
}

type ReadResponse struct {
	Submission *Submission `protobuf:"bytes,1,opt,name=submission" json:"submission,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadResponse) GetSubmission() *Submission {
	if m != nil {
		return m.Submission
	}
	return nil
}

type UpdateRequest struct {
	Job *xmc_srv_dispatcher_job.Job `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateRequest) GetJob() *xmc_srv_dispatcher_job.Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type SearchRequest struct {
	Limit              uint32                               `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset             uint32                               `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	TaskId             string                               `protobuf:"bytes,3,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	DatasetId          string                               `protobuf:"bytes,4,opt,name=dataset_id,json=datasetId" json:"dataset_id,omitempty"`
	EvalId             string                               `protobuf:"bytes,5,opt,name=eval_id,json=evalId" json:"eval_id,omitempty"`
	State              *StateValue                          `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	Language           string                               `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
	CreatedAt          *xmc_srv_core_tsrange.TimestampRange `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	FinishedAt         *xmc_srv_core_tsrange.TimestampRange `protobuf:"bytes,9,opt,name=finished_at,json=finishedAt" json:"finished_at,omitempty"`
	ErrorMessage       string                               `protobuf:"bytes,10,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	CompilationMessage string                               `protobuf:"bytes,11,opt,name=compilation_message,json=compilationMessage" json:"compilation_message,omitempty"`
	IncludeResult      bool                                 `protobuf:"varint,12,opt,name=include_result,json=includeResult" json:"include_result,omitempty"`
	IncludeTestResults bool                                 `protobuf:"varint,13,opt,name=include_test_results,json=includeTestResults" json:"include_test_results,omitempty"`
	UserId             string                               `protobuf:"bytes,14,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *SearchRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchRequest) GetEvalId() string {
	if m != nil {
		return m.EvalId
	}
	return ""
}

func (m *SearchRequest) GetState() *StateValue {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *SearchRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *SearchRequest) GetCreatedAt() *xmc_srv_core_tsrange.TimestampRange {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *SearchRequest) GetFinishedAt() *xmc_srv_core_tsrange.TimestampRange {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

func (m *SearchRequest) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *SearchRequest) GetCompilationMessage() string {
	if m != nil {
		return m.CompilationMessage
	}
	return ""
}

func (m *SearchRequest) GetIncludeResult() bool {
	if m != nil {
		return m.IncludeResult
	}
	return false
}

func (m *SearchRequest) GetIncludeTestResults() bool {
	if m != nil {
		return m.IncludeTestResults
	}
	return false
}

func (m *SearchRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SearchResponse struct {
	Submissions []*Submission                 `protobuf:"bytes,1,rep,name=submissions" json:"submissions,omitempty"`
	Meta        *xmc_srv_core_searchmeta.Meta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SearchResponse) GetSubmissions() []*Submission {
	if m != nil {
		return m.Submissions
	}
	return nil
}

func (m *SearchResponse) GetMeta() *xmc_srv_core_searchmeta.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*StateValue)(nil), "xmc.srv.core.submission.StateValue")
	proto.RegisterType((*Submission)(nil), "xmc.srv.core.submission.Submission")
	proto.RegisterType((*CreateRequest)(nil), "xmc.srv.core.submission.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "xmc.srv.core.submission.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "xmc.srv.core.submission.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "xmc.srv.core.submission.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "xmc.srv.core.submission.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "xmc.srv.core.submission.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "xmc.srv.core.submission.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "xmc.srv.core.submission.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "xmc.srv.core.submission.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "xmc.srv.core.submission.SearchResponse")
	proto.RegisterEnum("xmc.srv.core.submission.State", State_name, State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for SubmissionService service

type SubmissionServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type submissionServiceClient struct {
	c           client.Client
	serviceName string
}

func NewSubmissionServiceClient(serviceName string, c client.Client) SubmissionServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "xmc.srv.core.submission"
	}
	return &submissionServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *submissionServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SubmissionService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *submissionServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SubmissionService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *submissionServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SubmissionService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *submissionServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SubmissionService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *submissionServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SubmissionService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SubmissionService service

type SubmissionServiceHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterSubmissionServiceHandler(s server.Server, hdlr SubmissionServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&SubmissionService{hdlr}, opts...))
}

type SubmissionService struct {
	SubmissionServiceHandler
}

func (h *SubmissionService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.SubmissionServiceHandler.Create(ctx, in, out)
}

func (h *SubmissionService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.SubmissionServiceHandler.Read(ctx, in, out)
}

func (h *SubmissionService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.SubmissionServiceHandler.Update(ctx, in, out)
}

func (h *SubmissionService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.SubmissionServiceHandler.Delete(ctx, in, out)
}

func (h *SubmissionService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.SubmissionServiceHandler.Search(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/xmc-dev/xmc/xmc-core/proto/submission/submission.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xed, 0x6e, 0x1b, 0x45,
	0x14, 0x8d, 0x63, 0xc7, 0xb1, 0xaf, 0xbd, 0xab, 0x30, 0x54, 0xd4, 0x32, 0x2a, 0x8d, 0x36, 0x2d,
	0x54, 0x48, 0x59, 0x83, 0xcb, 0x9f, 0xa8, 0x12, 0x52, 0xea, 0x46, 0xc8, 0x48, 0x6d, 0xd1, 0x3a,
	0x05, 0x44, 0x7f, 0x58, 0xe3, 0x9d, 0x89, 0x33, 0x65, 0x77, 0xc7, 0xec, 0xcc, 0x5a, 0x7d, 0x06,
	0xde, 0x88, 0xa7, 0xe0, 0x0d, 0x78, 0x16, 0x34, 0x1f, 0xeb, 0xfd, 0x00, 0x3b, 0xce, 0x0f, 0x6b,
	0xe7, 0xe3, 0xdc, 0xb3, 0xd7, 0xe7, 0xde, 0x7b, 0x16, 0x2e, 0x97, 0x4c, 0xde, 0x66, 0x0b, 0x3f,
	0xe4, 0xf1, 0xe8, 0x63, 0x1c, 0x9e, 0x13, 0xba, 0x56, 0x4f, 0xbd, 0x0e, 0x79, 0x4a, 0x47, 0xab,
	0x94, 0x4b, 0x3e, 0x12, 0xd9, 0x22, 0x66, 0x42, 0x30, 0x9e, 0x94, 0x96, 0xbe, 0xbe, 0x43, 0x0f,
	0x3f, 0xc6, 0xa1, 0x2f, 0xd2, 0xb5, 0xaf, 0xf0, 0x7e, 0x71, 0x3d, 0xbc, 0xd8, 0x8f, 0x3b, 0xa5,
	0x22, 0x8b, 0xa4, 0x7d, 0x18, 0xce, 0xe1, 0xbe, 0x69, 0x51, 0x9c, 0x86, 0xb7, 0x31, 0x95, 0xb8,
	0xb4, 0xb4, 0x14, 0x2f, 0xf6, 0xa3, 0x90, 0x22, 0xc5, 0xc9, 0x92, 0xe6, 0x4f, 0x1b, 0xbc, 0x2d,
	0x75, 0xc2, 0xc4, 0x0a, 0xcb, 0xf0, 0x96, 0xa6, 0xe7, 0x22, 0x5d, 0x5b, 0x8a, 0x0f, 0x7c, 0xa1,
	0x7e, 0x36, 0xf4, 0xf1, 0x92, 0xf3, 0x65, 0x64, 0xe9, 0x17, 0xd9, 0xcd, 0x48, 0xb2, 0x98, 0x0a,
	0x89, 0xe3, 0x95, 0x01, 0x78, 0x2f, 0x01, 0x66, 0x12, 0x4b, 0xfa, 0x33, 0x8e, 0x32, 0x8a, 0xbe,
	0x83, 0xa3, 0xb5, 0x5a, 0x0c, 0x1a, 0xa7, 0x8d, 0x67, 0xee, 0xf8, 0x0b, 0x7f, 0x8b, 0x9a, 0xbe,
	0x8e, 0x09, 0x0c, 0xd8, 0xfb, 0xbb, 0x09, 0x30, 0xdb, 0xdc, 0x21, 0x17, 0x0e, 0x19, 0xd1, 0x0c,
	0xdd, 0xe0, 0x90, 0x11, 0xf4, 0x10, 0x8e, 0x25, 0x16, 0xbf, 0xcf, 0x19, 0x19, 0x1c, 0xea, 0xc3,
	0xb6, 0xda, 0x4e, 0x09, 0x7a, 0x04, 0x40, 0xb0, 0xc4, 0x82, 0x4a, 0x75, 0xd7, 0xd4, 0x77, 0x5d,
	0x7b, 0x32, 0x25, 0xe8, 0x0c, 0x1c, 0x2c, 0x25, 0x56, 0x3a, 0x26, 0x1a, 0xd1, 0xd2, 0x88, 0x7e,
	0x71, 0x38, 0xd5, 0xe4, 0x74, 0x8d, 0x23, 0x75, 0x7d, 0x64, 0xc8, 0xd5, 0x76, 0x4a, 0xd0, 0x73,
	0x68, 0x9b, 0x22, 0x0e, 0xda, 0xa7, 0x8d, 0x67, 0xbd, 0xf1, 0xe7, 0xd5, 0xff, 0x62, 0x0b, 0x1c,
	0xe8, 0x47, 0x60, 0xa1, 0xe8, 0x02, 0x20, 0x4c, 0x29, 0x96, 0x94, 0xcc, 0xb1, 0x1c, 0x1c, 0xeb,
	0xc0, 0xa1, 0x6f, 0x34, 0xf4, 0x73, 0x0d, 0xfd, 0xeb, 0x5c, 0xc3, 0xa0, 0x6b, 0xd1, 0x97, 0x12,
	0xbd, 0x80, 0xde, 0x0d, 0x4b, 0x98, 0xb8, 0x35, 0xb1, 0x9d, 0x3b, 0x63, 0x21, 0x87, 0x5f, 0x4a,
	0xa5, 0xbb, 0x50, 0x8a, 0x0e, 0xba, 0xfb, 0xe9, 0xae, 0xc1, 0x68, 0x08, 0x9d, 0x08, 0x27, 0xcb,
	0x0c, 0x2f, 0xe9, 0x00, 0xf4, 0x9f, 0xdf, 0xec, 0x95, 0x78, 0x8b, 0x8c, 0x45, 0x64, 0x1e, 0xf2,
	0x38, 0xc6, 0x09, 0x19, 0xf4, 0x8c, 0x78, 0xfa, 0x70, 0x62, 0xce, 0x94, 0x78, 0x99, 0xa0, 0xa9,
	0x12, 0xaf, 0x6f, 0xc4, 0x53, 0xdb, 0x29, 0xf1, 0x7e, 0x05, 0x67, 0xa2, 0xff, 0x59, 0x40, 0xff,
	0xc8, 0xa8, 0x90, 0xe5, 0x1a, 0x36, 0x2a, 0x35, 0x44, 0xd0, 0x0a, 0x39, 0xa1, 0xba, 0xb2, 0xfd,
	0x40, 0xaf, 0x2b, 0x79, 0x35, 0xab, 0x79, 0x79, 0xa7, 0xe0, 0xe6, 0xcc, 0x62, 0xc5, 0x13, 0x41,
	0xeb, 0xed, 0xe2, 0xad, 0xa1, 0x17, 0x50, 0x4c, 0xf2, 0x37, 0xd7, 0xbb, 0xe9, 0x29, 0xb8, 0x2c,
	0x09, 0xa3, 0x8c, 0xd0, 0xb9, 0xad, 0xaf, 0x7a, 0x75, 0x27, 0x70, 0xec, 0xa9, 0xa9, 0x28, 0xfa,
	0x06, 0x1e, 0xe4, 0x30, 0x49, 0x85, 0xb4, 0x58, 0xa1, 0xf3, 0xe9, 0x04, 0xc8, 0xde, 0x5d, 0x53,
	0x21, 0x4d, 0x80, 0xf0, 0x66, 0xd0, 0x37, 0xef, 0xb5, 0x79, 0x4d, 0x00, 0x0a, 0xe1, 0x75, 0x02,
	0xbd, 0xf1, 0xd9, 0xf6, 0xc2, 0x6c, 0x96, 0x41, 0x29, 0xcc, 0xfb, 0x1e, 0x9c, 0x77, 0x2b, 0x52,
	0x12, 0xf2, 0x1c, 0x9a, 0x1f, 0xf8, 0xc2, 0xd2, 0x15, 0x3d, 0x59, 0x8c, 0xb2, 0xaf, 0x86, 0xf7,
	0x47, 0xbe, 0x08, 0x14, 0xce, 0x3b, 0x01, 0x37, 0x8f, 0x37, 0x69, 0x79, 0x8f, 0xc1, 0x79, 0x45,
	0x23, 0x5a, 0x30, 0xd6, 0xf5, 0x3b, 0x01, 0x37, 0x07, 0xd8, 0x90, 0xbf, 0x5a, 0xe0, 0xcc, 0xb4,
	0x23, 0xe5, 0x31, 0x0f, 0xe0, 0x28, 0x62, 0x31, 0x93, 0x3a, 0xcc, 0x09, 0xcc, 0x06, 0x7d, 0x06,
	0x6d, 0x7e, 0x73, 0x23, 0xa8, 0x91, 0xd4, 0x09, 0xec, 0xae, 0x5c, 0xfc, 0xe6, 0x8e, 0x01, 0x6e,
	0xd5, 0x07, 0x78, 0xeb, 0x6c, 0x5e, 0xe4, 0xed, 0xde, 0xbe, 0x4b, 0xd5, 0x8d, 0x35, 0xfd, 0x5f,
	0xcf, 0x1f, 0xd7, 0x7a, 0x7e, 0x52, 0x99, 0x5e, 0x33, 0x81, 0x4f, 0xaa, 0xdc, 0xb9, 0xb1, 0x16,
	0x63, 0xa8, 0xb6, 0xe5, 0x39, 0xbe, 0xaa, 0xce, 0x71, 0xf7, 0x1e, 0x2c, 0xe5, 0x89, 0x3e, 0x03,
	0x87, 0xa6, 0x29, 0x4f, 0xe7, 0x31, 0x15, 0xa2, 0x18, 0xd0, 0xbe, 0x3e, 0x7c, 0x6d, 0xce, 0xd0,
	0x08, 0x3e, 0x0d, 0x79, 0xbc, 0x62, 0x11, 0x96, 0x8c, 0x27, 0x1b, 0xa8, 0x19, 0x55, 0x54, 0xba,
	0xca, 0x03, 0xfe, 0xdb, 0xfc, 0xfd, 0xfb, 0x34, 0xbf, 0xb3, 0xad, 0xf9, 0xcb, 0x4e, 0xe0, 0x56,
	0x9c, 0xe0, 0xcf, 0x06, 0xb8, 0x79, 0xef, 0xd8, 0xc1, 0xb8, 0x82, 0x5e, 0x51, 0x22, 0x31, 0x68,
	0x9c, 0x36, 0xf7, 0x9d, 0x8c, 0x72, 0x1c, 0xfa, 0x16, 0x5a, 0xea, 0x03, 0xa9, 0x7b, 0xad, 0x37,
	0x7e, 0x54, 0x8b, 0x2f, 0x3e, 0xa0, 0xaf, 0xa9, 0xc4, 0x81, 0x86, 0x7e, 0xed, 0xc3, 0x91, 0xee,
	0x08, 0xd4, 0x83, 0xe3, 0x5f, 0x2e, 0xa7, 0xd7, 0xd3, 0x37, 0x3f, 0x9c, 0x1c, 0x20, 0x17, 0xe0,
	0xa7, 0xe0, 0xed, 0xe4, 0x6a, 0x36, 0x53, 0xfb, 0x06, 0xea, 0x40, 0xeb, 0xd5, 0xdb, 0x37, 0x57,
	0x27, 0x87, 0xe3, 0x7f, 0x9a, 0xf0, 0x49, 0xf1, 0xfa, 0x19, 0x4d, 0xd7, 0x2c, 0xa4, 0xe8, 0x3d,
	0xb4, 0x8d, 0x05, 0xa1, 0x2f, 0xb7, 0x26, 0x5d, 0x71, 0xbf, 0xe1, 0x57, 0x77, 0xe2, 0xec, 0xa4,
	0x1d, 0xa0, 0x77, 0xd0, 0x52, 0x2e, 0x82, 0x9e, 0x6c, 0x0d, 0x29, 0x99, 0xdb, 0xf0, 0xe9, 0x1d,
	0xa8, 0x0d, 0xed, 0x7b, 0x68, 0x1b, 0x1f, 0xd8, 0x91, 0x73, 0xc5, 0x68, 0x76, 0xe4, 0x5c, 0x33,
	0x14, 0x4d, 0x6e, 0x1c, 0x63, 0x07, 0x79, 0xc5, 0x73, 0x76, 0x90, 0xd7, 0xac, 0x47, 0x93, 0x9b,
	0xfe, 0xd9, 0x41, 0x5e, 0x31, 0xa7, 0x1d, 0xe4, 0xd5, 0x46, 0xf4, 0x0e, 0x5e, 0xf6, 0x7f, 0x2b,
	0x99, 0xed, 0xa2, 0xad, 0xbf, 0xb2, 0xcf, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x73, 0x12, 0x9c,
	0x18, 0x47, 0x0a, 0x00, 0x00,
}
