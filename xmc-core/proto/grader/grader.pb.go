// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xmc-dev/xmc/xmc-core/proto/grader/grader.proto

/*
Package grader is a generated protocol buffer package.

It is generated from these files:
	github.com/xmc-dev/xmc/xmc-core/proto/grader/grader.proto

It has these top-level messages:
	Grader
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	GetRequest
	GetResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package grader

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import xmc_srv_core_searchmeta "github.com/xmc-dev/xmc/xmc-core/proto/searchmeta"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Grader struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AttachmentId string `protobuf:"bytes,2,opt,name=attachment_id,json=attachmentId" json:"attachment_id,omitempty"`
	Language     string `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *Grader) Reset()                    { *m = Grader{} }
func (m *Grader) String() string            { return proto.CompactTextString(m) }
func (*Grader) ProtoMessage()               {}
func (*Grader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Grader) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Grader) GetAttachmentId() string {
	if m != nil {
		return m.AttachmentId
	}
	return ""
}

func (m *Grader) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Grader) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateRequest struct {
	Grader *Grader `protobuf:"bytes,1,opt,name=grader" json:"grader,omitempty"`
	Code   []byte  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetGrader() *Grader {
	if m != nil {
		return m.Grader
	}
	return nil
}

func (m *CreateRequest) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

type CreateResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	Grader *Grader `protobuf:"bytes,1,opt,name=grader" json:"grader,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetGrader() *Grader {
	if m != nil {
		return m.Grader
	}
	return nil
}

type GetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetResponse struct {
	Grader *Grader `protobuf:"bytes,1,opt,name=grader" json:"grader,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetResponse) GetGrader() *Grader {
	if m != nil {
		return m.Grader
	}
	return nil
}

type UpdateRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Code     []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Language string `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRequest) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *UpdateRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SearchRequest struct {
	Limit    uint32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset   uint32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Language string `protobuf:"bytes,4,opt,name=language" json:"language,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type SearchResponse struct {
	Graders []*Grader                     `protobuf:"bytes,1,rep,name=graders" json:"graders,omitempty"`
	Meta    *xmc_srv_core_searchmeta.Meta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchResponse) GetGraders() []*Grader {
	if m != nil {
		return m.Graders
	}
	return nil
}

func (m *SearchResponse) GetMeta() *xmc_srv_core_searchmeta.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*Grader)(nil), "xmc.srv.core.grader.Grader")
	proto.RegisterType((*CreateRequest)(nil), "xmc.srv.core.grader.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "xmc.srv.core.grader.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "xmc.srv.core.grader.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "xmc.srv.core.grader.ReadResponse")
	proto.RegisterType((*GetRequest)(nil), "xmc.srv.core.grader.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "xmc.srv.core.grader.GetResponse")
	proto.RegisterType((*UpdateRequest)(nil), "xmc.srv.core.grader.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "xmc.srv.core.grader.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "xmc.srv.core.grader.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "xmc.srv.core.grader.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "xmc.srv.core.grader.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "xmc.srv.core.grader.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for GraderService service

type GraderServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type graderServiceClient struct {
	c           client.Client
	serviceName string
}

func NewGraderServiceClient(serviceName string, c client.Client) GraderServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "xmc.srv.core.grader"
	}
	return &graderServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *graderServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "GraderService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graderServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "GraderService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graderServiceClient) Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error) {
	req := c.c.NewRequest(c.serviceName, "GraderService.Get", in)
	out := new(GetResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graderServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "GraderService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graderServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "GraderService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graderServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "GraderService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GraderService service

type GraderServiceHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Get(context.Context, *GetRequest, *GetResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterGraderServiceHandler(s server.Server, hdlr GraderServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&GraderService{hdlr}, opts...))
}

type GraderService struct {
	GraderServiceHandler
}

func (h *GraderService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.GraderServiceHandler.Create(ctx, in, out)
}

func (h *GraderService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.GraderServiceHandler.Read(ctx, in, out)
}

func (h *GraderService) Get(ctx context.Context, in *GetRequest, out *GetResponse) error {
	return h.GraderServiceHandler.Get(ctx, in, out)
}

func (h *GraderService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.GraderServiceHandler.Update(ctx, in, out)
}

func (h *GraderService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.GraderServiceHandler.Delete(ctx, in, out)
}

func (h *GraderService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.GraderServiceHandler.Search(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/xmc-dev/xmc/xmc-core/proto/grader/grader.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcf, 0x6b, 0xdb, 0x4c,
	0x10, 0x8d, 0x2d, 0x7d, 0xfa, 0xd2, 0xb1, 0x65, 0xca, 0xb6, 0x14, 0xa1, 0x12, 0xa2, 0x6e, 0x2e,
	0xbd, 0x54, 0xa6, 0x0e, 0x3d, 0xf4, 0xd8, 0xa4, 0x60, 0x5a, 0xc8, 0x45, 0xa6, 0x50, 0x7a, 0x29,
	0x1b, 0xed, 0xc4, 0x11, 0x58, 0x96, 0x2b, 0xad, 0x4d, 0xe8, 0x1f, 0x5f, 0x8a, 0x66, 0xb5, 0x8a,
	0x24, 0xa4, 0xf4, 0xd7, 0x49, 0xbb, 0x3b, 0x6f, 0xde, 0xcc, 0xbc, 0x7d, 0x2b, 0x78, 0xbb, 0x4e,
	0xd4, 0xed, 0xfe, 0x3a, 0x8c, 0xb3, 0x74, 0x7e, 0x97, 0xc6, 0xaf, 0x24, 0x1e, 0xca, 0x2f, 0xad,
	0xe3, 0x2c, 0xc7, 0xf9, 0x2e, 0xcf, 0x54, 0x36, 0x5f, 0xe7, 0x42, 0x62, 0x5e, 0x7d, 0x42, 0x3a,
	0x63, 0x4f, 0xee, 0xd2, 0x38, 0x2c, 0xf2, 0x43, 0x58, 0xe2, 0x42, 0x1d, 0xf2, 0xdf, 0xfd, 0x1e,
	0x5f, 0x81, 0x22, 0x8f, 0x6f, 0x53, 0x54, 0xa2, 0xb1, 0xd4, 0xbc, 0x3c, 0x05, 0x67, 0x49, 0x64,
	0x6c, 0x06, 0xe3, 0x44, 0x7a, 0xa3, 0x60, 0xf4, 0xf2, 0x51, 0x34, 0x4e, 0x24, 0x3b, 0x03, 0x57,
	0x28, 0x25, 0x4a, 0xf4, 0x56, 0x7d, 0x4d, 0xa4, 0x37, 0xa6, 0xd0, 0xf4, 0xfe, 0xf0, 0x83, 0x64,
	0x3e, 0x1c, 0x6f, 0xc4, 0x76, 0xbd, 0x17, 0x6b, 0xf4, 0x2c, 0x8a, 0xd7, 0x7b, 0xc6, 0xc0, 0xde,
	0x8a, 0x14, 0x3d, 0x9b, 0xce, 0x69, 0xcd, 0x3f, 0x83, 0x7b, 0x99, 0xa3, 0x50, 0x18, 0xe1, 0xb7,
	0x3d, 0x16, 0x8a, 0x9d, 0x83, 0xa3, 0x87, 0xa1, 0xca, 0x93, 0xc5, 0xf3, 0xb0, 0x67, 0xd0, 0x50,
	0xb7, 0x18, 0x55, 0xd0, 0x92, 0x39, 0xce, 0x24, 0x52, 0x47, 0xd3, 0x88, 0xd6, 0x3c, 0x80, 0x99,
	0x61, 0x2e, 0x76, 0xd9, 0xb6, 0xc0, 0xee, 0x40, 0xfc, 0x04, 0x26, 0x11, 0x0a, 0x69, 0x2a, 0x77,
	0xc3, 0x97, 0x30, 0xd5, 0xe1, 0x2a, 0xfd, 0x6f, 0x3a, 0xe3, 0x01, 0xc0, 0x12, 0x95, 0x29, 0x61,
	0x14, 0x18, 0x35, 0x14, 0xb8, 0x80, 0x09, 0x21, 0xfe, 0xa5, 0x4a, 0x0c, 0xee, 0xa7, 0x9d, 0x6c,
	0xa8, 0xd8, 0xbd, 0xbb, 0x1e, 0x81, 0xfe, 0xf8, 0xaa, 0x1e, 0xc3, 0xcc, 0x14, 0xd1, 0xbd, 0xf2,
	0x53, 0x70, 0xdf, 0xe3, 0x06, 0x07, 0xcb, 0x96, 0x29, 0x06, 0x50, 0xa5, 0xa4, 0xe0, 0xae, 0xc8,
	0x72, 0x26, 0xe5, 0x29, 0xfc, 0xb7, 0x49, 0xd2, 0x44, 0x51, 0x96, 0x1b, 0xe9, 0x0d, 0x7b, 0x06,
	0x4e, 0x76, 0x73, 0x53, 0xa0, 0xa2, 0x8e, 0xdd, 0xa8, 0xda, 0xd5, 0x7d, 0x59, 0xf7, 0x7d, 0xb5,
	0xe6, 0xb0, 0xdb, 0x73, 0xf0, 0xef, 0x30, 0x33, 0xe5, 0x2a, 0x7d, 0xdf, 0xc0, 0xff, 0x5a, 0xb4,
	0xc2, 0x1b, 0x05, 0xd6, 0xaf, 0x04, 0x36, 0x58, 0xf6, 0x1a, 0xec, 0xf2, 0x91, 0x50, 0x3b, 0x93,
	0xc5, 0x49, 0x3b, 0xa7, 0xf1, 0x88, 0xae, 0x50, 0x89, 0x88, 0xa0, 0x8b, 0x1f, 0x16, 0xb8, 0x9a,
	0x66, 0x85, 0xf9, 0x21, 0x89, 0x91, 0xad, 0xc0, 0xd1, 0x96, 0x64, 0xbc, 0xb7, 0x68, 0xeb, 0x25,
	0xf8, 0x67, 0x0f, 0x62, 0x2a, 0x3d, 0x8f, 0xd8, 0x15, 0xd8, 0xa5, 0x4d, 0x59, 0xd0, 0x0b, 0x6f,
	0x18, 0xdc, 0x7f, 0xf1, 0x00, 0xa2, 0xa6, 0xfb, 0x08, 0xd6, 0x12, 0x15, 0x3b, 0xed, 0x57, 0xa5,
	0xb6, 0xb2, 0x1f, 0x0c, 0x03, 0x6a, 0xae, 0x15, 0x38, 0xda, 0x31, 0x03, 0xf3, 0xb6, 0x3c, 0x3b,
	0x30, 0x6f, 0xc7, 0x72, 0x44, 0xaa, 0x3d, 0x35, 0x40, 0xda, 0x72, 0xe4, 0x00, 0x69, 0xc7, 0x94,
	0x44, 0xaa, 0x7d, 0x32, 0x40, 0xda, 0xf2, 0xec, 0x00, 0x69, 0xdb, 0x68, 0xfc, 0xe8, 0xe2, 0xf8,
	0x4b, 0xf5, 0x3e, 0xaf, 0x1d, 0xfa, 0xb7, 0x9e, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xd7,
	0x0f, 0xf2, 0xf0, 0x05, 0x00, 0x00,
}
