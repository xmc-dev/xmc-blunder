// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xmc-dev/xmc/xmc-core/proto/attachment/attachment.proto

/*
Package attachment is a generated protocol buffer package.

It is generated from these files:
	github.com/xmc-dev/xmc/xmc-core/proto/attachment/attachment.proto

It has these top-level messages:
	Attachment
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	GetContentsRequest
	GetContentsResponse
	SetPublicRequest
	SetPublicResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package attachment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import xmc_srv_core_searchmeta "github.com/xmc-dev/xmc/xmc-core/proto/searchmeta"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Attachment struct {
	Id          string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	S3Object    string                     `protobuf:"bytes,2,opt,name=s3_object,json=s3Object" json:"s3_object,omitempty"`
	Description string                     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ObjectId    string                     `protobuf:"bytes,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Filename    string                     `protobuf:"bytes,5,opt,name=filename" json:"filename,omitempty"`
	Size        int32                      `protobuf:"varint,6,opt,name=size" json:"size,omitempty"`
	CreatedAt   *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt   *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	IsPublic    bool                       `protobuf:"varint,9,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Attachment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Attachment) GetS3Object() string {
	if m != nil {
		return m.S3Object
	}
	return ""
}

func (m *Attachment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Attachment) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Attachment) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Attachment) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Attachment) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Attachment) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Attachment) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

type CreateRequest struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment" json:"attachment,omitempty"`
	Contents   []byte      `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetAttachment() *Attachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *CreateRequest) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type CreateResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	Attachment *Attachment `protobuf:"bytes,1,opt,name=attachment" json:"attachment,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetAttachment() *Attachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

type GetContentsRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetContentsRequest) Reset()                    { *m = GetContentsRequest{} }
func (m *GetContentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetContentsRequest) ProtoMessage()               {}
func (*GetContentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetContentsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetContentsResponse struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *GetContentsResponse) Reset()                    { *m = GetContentsResponse{} }
func (m *GetContentsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetContentsResponse) ProtoMessage()               {}
func (*GetContentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetContentsResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type SetPublicRequest struct {
	AttachmentId string `protobuf:"bytes,2,opt,name=attachment_id,json=attachmentId" json:"attachment_id,omitempty"`
	Public       bool   `protobuf:"varint,3,opt,name=public" json:"public,omitempty"`
}

func (m *SetPublicRequest) Reset()                    { *m = SetPublicRequest{} }
func (m *SetPublicRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPublicRequest) ProtoMessage()               {}
func (*SetPublicRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SetPublicRequest) GetAttachmentId() string {
	if m != nil {
		return m.AttachmentId
	}
	return ""
}

func (m *SetPublicRequest) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

type SetPublicResponse struct {
}

func (m *SetPublicResponse) Reset()                    { *m = SetPublicResponse{} }
func (m *SetPublicResponse) String() string            { return proto.CompactTextString(m) }
func (*SetPublicResponse) ProtoMessage()               {}
func (*SetPublicResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type UpdateRequest struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Contents    []byte `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Filename    string `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRequest) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *UpdateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type SearchRequest struct {
	Limit       uint32 `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Offset      uint32 `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Filename    string `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SearchRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *SearchRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type SearchResponse struct {
	Attachments []*Attachment                 `protobuf:"bytes,1,rep,name=attachments" json:"attachments,omitempty"`
	Meta        *xmc_srv_core_searchmeta.Meta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SearchResponse) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *SearchResponse) GetMeta() *xmc_srv_core_searchmeta.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*Attachment)(nil), "xmc.srv.core.attachment.Attachment")
	proto.RegisterType((*CreateRequest)(nil), "xmc.srv.core.attachment.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "xmc.srv.core.attachment.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "xmc.srv.core.attachment.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "xmc.srv.core.attachment.ReadResponse")
	proto.RegisterType((*GetContentsRequest)(nil), "xmc.srv.core.attachment.GetContentsRequest")
	proto.RegisterType((*GetContentsResponse)(nil), "xmc.srv.core.attachment.GetContentsResponse")
	proto.RegisterType((*SetPublicRequest)(nil), "xmc.srv.core.attachment.SetPublicRequest")
	proto.RegisterType((*SetPublicResponse)(nil), "xmc.srv.core.attachment.SetPublicResponse")
	proto.RegisterType((*UpdateRequest)(nil), "xmc.srv.core.attachment.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "xmc.srv.core.attachment.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "xmc.srv.core.attachment.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "xmc.srv.core.attachment.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "xmc.srv.core.attachment.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "xmc.srv.core.attachment.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AttachmentService service

type AttachmentServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	GetContents(ctx context.Context, in *GetContentsRequest, opts ...client.CallOption) (*GetContentsResponse, error)
	SetPublic(ctx context.Context, in *SetPublicRequest, opts ...client.CallOption) (*SetPublicResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type attachmentServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAttachmentServiceClient(serviceName string, c client.Client) AttachmentServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "xmc.srv.core.attachment"
	}
	return &attachmentServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *attachmentServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachmentServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachmentServiceClient) GetContents(ctx context.Context, in *GetContentsRequest, opts ...client.CallOption) (*GetContentsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.GetContents", in)
	out := new(GetContentsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachmentServiceClient) SetPublic(ctx context.Context, in *SetPublicRequest, opts ...client.CallOption) (*SetPublicResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.SetPublic", in)
	out := new(SetPublicResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachmentServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachmentServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachmentServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AttachmentService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AttachmentService service

type AttachmentServiceHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	GetContents(context.Context, *GetContentsRequest, *GetContentsResponse) error
	SetPublic(context.Context, *SetPublicRequest, *SetPublicResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterAttachmentServiceHandler(s server.Server, hdlr AttachmentServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AttachmentService{hdlr}, opts...))
}

type AttachmentService struct {
	AttachmentServiceHandler
}

func (h *AttachmentService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AttachmentServiceHandler.Create(ctx, in, out)
}

func (h *AttachmentService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AttachmentServiceHandler.Read(ctx, in, out)
}

func (h *AttachmentService) GetContents(ctx context.Context, in *GetContentsRequest, out *GetContentsResponse) error {
	return h.AttachmentServiceHandler.GetContents(ctx, in, out)
}

func (h *AttachmentService) SetPublic(ctx context.Context, in *SetPublicRequest, out *SetPublicResponse) error {
	return h.AttachmentServiceHandler.SetPublic(ctx, in, out)
}

func (h *AttachmentService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.AttachmentServiceHandler.Update(ctx, in, out)
}

func (h *AttachmentService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.AttachmentServiceHandler.Delete(ctx, in, out)
}

func (h *AttachmentService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.AttachmentServiceHandler.Search(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/xmc-dev/xmc/xmc-core/proto/attachment/attachment.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0xae, 0xf3, 0x77, 0x93, 0x93, 0x38, 0x4a, 0xa7, 0x57, 0xf7, 0x5a, 0x46, 0x55, 0x2d, 0xb7,
	0xd0, 0xf0, 0xe7, 0x88, 0x74, 0xc5, 0x32, 0x14, 0x84, 0x8a, 0x84, 0x40, 0x0e, 0xdd, 0xd0, 0x45,
	0xe4, 0xd8, 0x93, 0x76, 0xaa, 0x38, 0x36, 0x9e, 0x49, 0x55, 0x78, 0x04, 0x9e, 0x80, 0xc7, 0x60,
	0xcf, 0xcb, 0x21, 0xcf, 0x8c, 0xe3, 0x1f, 0x64, 0x27, 0x0b, 0x56, 0x99, 0x33, 0xf3, 0x7d, 0xe7,
	0x9c, 0x99, 0xef, 0x7c, 0x0e, 0x4c, 0xae, 0x09, 0xbb, 0x59, 0xcf, 0x2d, 0x37, 0xf0, 0x47, 0xf7,
	0xbe, 0xfb, 0xdc, 0xc3, 0x77, 0xf1, 0x2f, 0x5f, 0xbb, 0x41, 0x84, 0x47, 0x61, 0x14, 0xb0, 0x60,
	0xe4, 0x30, 0xe6, 0xb8, 0x37, 0x3e, 0x5e, 0xb1, 0xcc, 0xd2, 0xe2, 0x67, 0xe8, 0xff, 0x7b, 0xdf,
	0xb5, 0x68, 0x74, 0x67, 0xc5, 0x78, 0x2b, 0x3d, 0xd6, 0x77, 0xcc, 0x4d, 0xb1, 0x13, 0xc5, 0x0c,
	0xe6, 0x64, 0x96, 0x22, 0xb7, 0x7e, 0x74, 0x1d, 0x04, 0xd7, 0x4b, 0x89, 0x9c, 0xaf, 0x17, 0x23,
	0x46, 0x7c, 0x4c, 0x99, 0xe3, 0x87, 0x02, 0x60, 0xfe, 0xaa, 0x01, 0x4c, 0x36, 0x25, 0x51, 0x1f,
	0x6a, 0xc4, 0xd3, 0x14, 0x43, 0x19, 0x76, 0xec, 0x1a, 0xf1, 0xd0, 0x03, 0xe8, 0xd0, 0xb3, 0x59,
	0x30, 0xbf, 0xc5, 0x2e, 0xd3, 0x6a, 0x7c, 0xbb, 0x4d, 0xcf, 0x3e, 0xf0, 0x18, 0x19, 0xd0, 0xf5,
	0x30, 0x75, 0x23, 0x12, 0x32, 0x12, 0xac, 0xb4, 0x3a, 0x3f, 0xce, 0x6e, 0xc5, 0x74, 0xc1, 0x9d,
	0x11, 0x4f, 0x6b, 0x08, 0xba, 0xd8, 0xb8, 0xf0, 0x90, 0x0e, 0xed, 0x05, 0x59, 0xe2, 0x95, 0xe3,
	0x63, 0xad, 0x29, 0xce, 0x92, 0x18, 0x21, 0x68, 0x50, 0xf2, 0x0d, 0x6b, 0x2d, 0x43, 0x19, 0x36,
	0x6d, 0xbe, 0x46, 0x2f, 0x01, 0xdc, 0x08, 0x3b, 0x0c, 0x7b, 0x33, 0x87, 0x69, 0xff, 0x18, 0xca,
	0xb0, 0x3b, 0xd6, 0x2d, 0x71, 0x41, 0x2b, 0xb9, 0xa0, 0xf5, 0x29, 0xb9, 0xa0, 0xdd, 0x91, 0xe8,
	0x09, 0x8b, 0xa9, 0xeb, 0xd0, 0x4b, 0xa8, 0xed, 0xed, 0x54, 0x89, 0x9e, 0xb0, 0xf8, 0x0a, 0x84,
	0xce, 0xc2, 0xf5, 0x7c, 0x49, 0x5c, 0xad, 0x63, 0x28, 0xc3, 0xb6, 0xdd, 0x26, 0xf4, 0x23, 0x8f,
	0xcd, 0x10, 0xd4, 0x73, 0x5e, 0xc4, 0xc6, 0x5f, 0xd6, 0x98, 0x32, 0x74, 0x0e, 0x90, 0x0a, 0xc8,
	0xdf, 0xb1, 0x3b, 0x3e, 0xb6, 0x4a, 0x04, 0xb6, 0xd2, 0x87, 0xb7, 0x33, 0xb4, 0xf8, 0x61, 0xdc,
	0x60, 0xc5, 0xf0, 0x8a, 0x51, 0xfe, 0xe6, 0x3d, 0x7b, 0x13, 0x9b, 0x06, 0xf4, 0x93, 0x8a, 0x34,
	0x0c, 0x56, 0x14, 0x17, 0x25, 0x33, 0x0f, 0xa1, 0x6b, 0x63, 0xc7, 0x4b, 0x3a, 0x2a, 0x1e, 0x4f,
	0xa1, 0x27, 0x8e, 0x25, 0xfd, 0x6f, 0x74, 0x6c, 0x9e, 0x00, 0x7a, 0x8b, 0xd9, 0xb9, 0x6c, 0xb2,
	0xac, 0xf4, 0x29, 0x1c, 0xe4, 0x50, 0xb2, 0x83, 0x01, 0xd4, 0xd7, 0xd1, 0x52, 0xe2, 0xe2, 0xa5,
	0x79, 0x09, 0x83, 0x29, 0x66, 0xe2, 0x8d, 0x93, 0x64, 0xc7, 0xa0, 0xa6, 0x05, 0xe3, 0x71, 0x12,
	0xd3, 0xd8, 0x4b, 0x37, 0x2f, 0x3c, 0xf4, 0x1f, 0xb4, 0xa4, 0x52, 0x75, 0xae, 0x94, 0x8c, 0xde,
	0x35, 0xda, 0xca, 0xa0, 0x66, 0x1e, 0xc0, 0x7e, 0x26, 0xad, 0xa8, 0x6e, 0x7e, 0x05, 0xf5, 0x92,
	0x8b, 0x5d, 0xd2, 0x75, 0x95, 0x1a, 0x3b, 0x38, 0x20, 0x3b, 0xe4, 0x8d, 0xfc, 0x90, 0x9b, 0x03,
	0xe8, 0x27, 0xa5, 0x65, 0x33, 0x47, 0xa0, 0xbe, 0xc6, 0x4b, 0x5c, 0xda, 0x4c, 0x4c, 0x49, 0x00,
	0x92, 0xf2, 0x43, 0x01, 0x75, 0xca, 0x6d, 0x9f, 0x70, 0xfe, 0x85, 0xe6, 0x92, 0xf8, 0x84, 0xf1,
	0x7a, 0xaa, 0x2d, 0x82, 0xf8, 0x69, 0x82, 0xc5, 0x82, 0x62, 0xc6, 0xbd, 0xa6, 0xda, 0x32, 0x2a,
	0x5e, 0x41, 0xd9, 0x62, 0xe2, 0x5a, 0x85, 0x89, 0xeb, 0x85, 0xfb, 0x7d, 0x57, 0xa0, 0x9f, 0xb4,
	0x26, 0xb5, 0x7e, 0x03, 0xdd, 0x54, 0x30, 0xaa, 0x29, 0x46, 0x7d, 0xd7, 0x71, 0xcb, 0xf2, 0xd0,
	0x0b, 0x68, 0xc4, 0x1f, 0x39, 0xde, 0x4d, 0x77, 0x7c, 0x98, 0xe7, 0x67, 0x3e, 0x82, 0xef, 0x31,
	0x73, 0x6c, 0x0e, 0x1d, 0xff, 0x6c, 0xc2, 0x7e, 0x9a, 0x6e, 0x8a, 0xa3, 0x3b, 0xe2, 0x62, 0x74,
	0x05, 0x2d, 0x61, 0x27, 0xf4, 0xa8, 0xb4, 0x89, 0x9c, 0xc3, 0xf5, 0xd3, 0xad, 0x38, 0x29, 0xcc,
	0x1e, 0xba, 0x84, 0x46, 0x6c, 0x35, 0x74, 0x52, 0x4a, 0xc9, 0x18, 0x55, 0x7f, 0xb8, 0x05, 0xb5,
	0x49, 0x7b, 0x0b, 0xdd, 0x8c, 0x8d, 0xd0, 0xd3, 0x52, 0xde, 0x9f, 0x96, 0xd4, 0x9f, 0xed, 0x06,
	0xde, 0xd4, 0xf2, 0xa0, 0xb3, 0xb1, 0x0c, 0x7a, 0x5c, 0x4a, 0x2e, 0xba, 0x55, 0x7f, 0xb2, 0x0b,
	0x74, 0x53, 0xe5, 0x0a, 0x5a, 0xc2, 0x08, 0x15, 0x2a, 0xe4, 0x4c, 0x5a, 0xa1, 0x42, 0xc1, 0x51,
	0x3c, 0xb9, 0xb0, 0x4c, 0x45, 0xf2, 0x9c, 0xe9, 0x2a, 0x92, 0x17, 0xbc, 0xc7, 0x93, 0x8b, 0x09,
	0xaf, 0x48, 0x9e, 0x73, 0x67, 0x45, 0xf2, 0xbc, 0x55, 0xcc, 0xbd, 0x57, 0xbd, 0xcf, 0x99, 0x6f,
	0xec, 0xbc, 0xc5, 0xff, 0xa7, 0xce, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xab, 0x25, 0xfd, 0x9a,
	0x72, 0x08, 0x00, 0x00,
}
