// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xmc-dev/xmc/xmc-core/proto/tasklist/tasklist.proto

/*
Package tasklist is a generated protocol buffer package.

It is generated from these files:
	github.com/xmc-dev/xmc/xmc-core/proto/tasklist/tasklist.proto

It has these top-level messages:
	TaskList
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	GetRequest
	GetResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package tasklist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import xmc_srv_core_tsrange "github.com/xmc-dev/xmc/xmc-core/proto/tsrange"
import xmc_srv_core_searchmeta "github.com/xmc-dev/xmc/xmc-core/proto/searchmeta"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TaskList struct {
	Id                string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name              string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description       string                               `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	TimeRange         *xmc_srv_core_tsrange.TimestampRange `protobuf:"bytes,4,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	PageId            string                               `protobuf:"bytes,5,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	Title             string                               `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	PublicSubmissions bool                                 `protobuf:"varint,7,opt,name=public_submissions,json=publicSubmissions" json:"public_submissions,omitempty"`
	Path              string                               `protobuf:"bytes,8,opt,name=path" json:"path,omitempty"`
}

func (m *TaskList) Reset()                    { *m = TaskList{} }
func (m *TaskList) String() string            { return proto.CompactTextString(m) }
func (*TaskList) ProtoMessage()               {}
func (*TaskList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TaskList) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskList) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TaskList) GetTimeRange() *xmc_srv_core_tsrange.TimestampRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *TaskList) GetPageId() string {
	if m != nil {
		return m.PageId
	}
	return ""
}

func (m *TaskList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TaskList) GetPublicSubmissions() bool {
	if m != nil {
		return m.PublicSubmissions
	}
	return false
}

func (m *TaskList) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type CreateRequest struct {
	TaskList *TaskList `protobuf:"bytes,1,opt,name=task_list,json=taskList" json:"task_list,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetTaskList() *TaskList {
	if m != nil {
		return m.TaskList
	}
	return nil
}

type CreateResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	TaskList *TaskList `protobuf:"bytes,1,opt,name=task_list,json=taskList" json:"task_list,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetTaskList() *TaskList {
	if m != nil {
		return m.TaskList
	}
	return nil
}

type GetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetResponse struct {
	TaskList *TaskList `protobuf:"bytes,1,opt,name=task_list,json=taskList" json:"task_list,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetResponse) GetTaskList() *TaskList {
	if m != nil {
		return m.TaskList
	}
	return nil
}

type UpdateRequest struct {
	Id                string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name              string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description       string                               `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	TimeRange         *xmc_srv_core_tsrange.TimestampRange `protobuf:"bytes,4,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	SetNullTime       bool                                 `protobuf:"varint,5,opt,name=set_null_time,json=setNullTime" json:"set_null_time,omitempty"`
	Title             string                               `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	PublicSubmissions *google_protobuf.BoolValue           `protobuf:"bytes,7,opt,name=public_submissions,json=publicSubmissions" json:"public_submissions,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateRequest) GetTimeRange() *xmc_srv_core_tsrange.TimestampRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *UpdateRequest) GetSetNullTime() bool {
	if m != nil {
		return m.SetNullTime
	}
	return false
}

func (m *UpdateRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateRequest) GetPublicSubmissions() *google_protobuf.BoolValue {
	if m != nil {
		return m.PublicSubmissions
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteRequest struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	LeaveTasks bool   `protobuf:"varint,2,opt,name=leave_tasks,json=leaveTasks" json:"leave_tasks,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteRequest) GetLeaveTasks() bool {
	if m != nil {
		return m.LeaveTasks
	}
	return false
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SearchRequest struct {
	Limit             uint32                               `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset            uint32                               `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Name              string                               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description       string                               `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	TimeRange         *xmc_srv_core_tsrange.TimestampRange `protobuf:"bytes,5,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	Title             string                               `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	IsPermanent       *google_protobuf.BoolValue           `protobuf:"bytes,7,opt,name=is_permanent,json=isPermanent" json:"is_permanent,omitempty"`
	PublicSubmissions *google_protobuf.BoolValue           `protobuf:"bytes,8,opt,name=public_submissions,json=publicSubmissions" json:"public_submissions,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SearchRequest) GetTimeRange() *xmc_srv_core_tsrange.TimestampRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *SearchRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchRequest) GetIsPermanent() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsPermanent
	}
	return nil
}

func (m *SearchRequest) GetPublicSubmissions() *google_protobuf.BoolValue {
	if m != nil {
		return m.PublicSubmissions
	}
	return nil
}

type SearchResponse struct {
	TaskLists []*TaskList                   `protobuf:"bytes,1,rep,name=task_lists,json=taskLists" json:"task_lists,omitempty"`
	Meta      *xmc_srv_core_searchmeta.Meta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchResponse) GetTaskLists() []*TaskList {
	if m != nil {
		return m.TaskLists
	}
	return nil
}

func (m *SearchResponse) GetMeta() *xmc_srv_core_searchmeta.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskList)(nil), "xmc.srv.core.tasklist.TaskList")
	proto.RegisterType((*CreateRequest)(nil), "xmc.srv.core.tasklist.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "xmc.srv.core.tasklist.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "xmc.srv.core.tasklist.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "xmc.srv.core.tasklist.ReadResponse")
	proto.RegisterType((*GetRequest)(nil), "xmc.srv.core.tasklist.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "xmc.srv.core.tasklist.GetResponse")
	proto.RegisterType((*UpdateRequest)(nil), "xmc.srv.core.tasklist.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "xmc.srv.core.tasklist.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "xmc.srv.core.tasklist.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "xmc.srv.core.tasklist.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "xmc.srv.core.tasklist.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "xmc.srv.core.tasklist.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for TaskListService service

type TaskListServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type taskListServiceClient struct {
	c           client.Client
	serviceName string
}

func NewTaskListServiceClient(serviceName string, c client.Client) TaskListServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "xmc.srv.core.tasklist"
	}
	return &taskListServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *taskListServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TaskListService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TaskListService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListServiceClient) Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TaskListService.Get", in)
	out := new(GetResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TaskListService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TaskListService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskListServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TaskListService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TaskListService service

type TaskListServiceHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Get(context.Context, *GetRequest, *GetResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterTaskListServiceHandler(s server.Server, hdlr TaskListServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&TaskListService{hdlr}, opts...))
}

type TaskListService struct {
	TaskListServiceHandler
}

func (h *TaskListService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.TaskListServiceHandler.Create(ctx, in, out)
}

func (h *TaskListService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.TaskListServiceHandler.Read(ctx, in, out)
}

func (h *TaskListService) Get(ctx context.Context, in *GetRequest, out *GetResponse) error {
	return h.TaskListServiceHandler.Get(ctx, in, out)
}

func (h *TaskListService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.TaskListServiceHandler.Update(ctx, in, out)
}

func (h *TaskListService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.TaskListServiceHandler.Delete(ctx, in, out)
}

func (h *TaskListService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.TaskListServiceHandler.Search(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/xmc-dev/xmc/xmc-core/proto/tasklist/tasklist.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 739 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0x6e, 0x3e, 0xeb, 0x8c, 0x9b, 0xbc, 0x2f, 0xab, 0x02, 0x56, 0xa4, 0xd2, 0x60, 0x8a, 0xd4,
	0x4b, 0x1d, 0x11, 0x8e, 0x50, 0x04, 0x2d, 0x52, 0x55, 0xd1, 0x56, 0xe0, 0x16, 0x2a, 0x71, 0xb1,
	0x36, 0xf6, 0x34, 0x5d, 0xd5, 0x5f, 0x78, 0xd7, 0xa1, 0x77, 0x0e, 0xfc, 0x05, 0x6e, 0xfc, 0x2d,
	0x7e, 0x0e, 0xf2, 0xda, 0x9b, 0x26, 0x51, 0xdd, 0x46, 0x85, 0x03, 0x27, 0xcf, 0xee, 0xcc, 0x3c,
	0xe3, 0x9d, 0x67, 0x9e, 0x81, 0xed, 0x11, 0x13, 0xe7, 0xe9, 0xd0, 0x72, 0xa3, 0xa0, 0x7f, 0x19,
	0xb8, 0x5b, 0x1e, 0x8e, 0xb3, 0xaf, 0xb4, 0xdd, 0x28, 0xc1, 0x7e, 0x9c, 0x44, 0x22, 0xea, 0x0b,
	0xca, 0x2f, 0x7c, 0xc6, 0xc5, 0xc4, 0xb0, 0xe4, 0x3d, 0xb9, 0x7f, 0x19, 0xb8, 0x16, 0x4f, 0xc6,
	0x56, 0x16, 0x6b, 0x29, 0x67, 0xf7, 0xd1, 0x28, 0x8a, 0x46, 0x7e, 0x91, 0x3c, 0x4c, 0xcf, 0xfa,
	0x5f, 0x13, 0x1a, 0xc7, 0x98, 0xf0, 0x3c, 0xad, 0xfb, 0x62, 0xc1, 0xaa, 0x3c, 0xa1, 0xe1, 0x08,
	0xd5, 0xb7, 0x48, 0x7e, 0xb3, 0x58, 0x32, 0x47, 0x9a, 0xb8, 0xe7, 0x01, 0x0a, 0x3a, 0x65, 0xe6,
	0x10, 0xe6, 0xf7, 0x2a, 0x68, 0x27, 0x94, 0x5f, 0x1c, 0x30, 0x2e, 0x48, 0x07, 0xaa, 0xcc, 0x33,
	0x2a, 0xbd, 0xca, 0x66, 0xcb, 0xae, 0x32, 0x8f, 0x10, 0xa8, 0x87, 0x34, 0x40, 0xa3, 0x2a, 0x6f,
	0xa4, 0x4d, 0x7a, 0xa0, 0x7b, 0xc8, 0xdd, 0x84, 0xc5, 0x82, 0x45, 0xa1, 0x51, 0x93, 0xae, 0xe9,
	0x2b, 0xb2, 0x0b, 0x20, 0x58, 0x80, 0x8e, 0xfc, 0x53, 0xa3, 0xde, 0xab, 0x6c, 0xea, 0x83, 0x0d,
	0x6b, 0xb6, 0x3d, 0xc5, 0x33, 0x4e, 0x58, 0x80, 0x5c, 0xd0, 0x20, 0xb6, 0xb3, 0xa3, 0xdd, 0xca,
	0xf2, 0xa4, 0x49, 0x1e, 0xc2, 0x72, 0x4c, 0x47, 0xe8, 0x30, 0xcf, 0x68, 0xc8, 0x12, 0xcd, 0xec,
	0xb8, 0xef, 0x91, 0x55, 0x68, 0x08, 0x26, 0x7c, 0x34, 0x9a, 0xf2, 0x3a, 0x3f, 0x90, 0x2d, 0x20,
	0x71, 0x3a, 0xf4, 0x99, 0xeb, 0xf0, 0x74, 0x18, 0x30, 0xce, 0x59, 0x14, 0x72, 0x63, 0xb9, 0x57,
	0xd9, 0xd4, 0xec, 0x7b, 0xb9, 0xe7, 0xf8, 0xca, 0x91, 0x3d, 0x2c, 0xa6, 0xe2, 0xdc, 0xd0, 0xf2,
	0x87, 0x65, 0xb6, 0x79, 0x08, 0xed, 0xdd, 0x04, 0xa9, 0x40, 0x1b, 0xbf, 0xa4, 0xc8, 0x05, 0x79,
	0x09, 0xad, 0x8c, 0x46, 0x27, 0xe3, 0x51, 0x36, 0x45, 0x1f, 0xac, 0x5b, 0xd7, 0xb2, 0x6c, 0xa9,
	0x0e, 0xda, 0x9a, 0x28, 0x2c, 0xb3, 0x07, 0x1d, 0x05, 0xc7, 0xe3, 0x28, 0xe4, 0x38, 0xdf, 0x5d,
	0x73, 0x0d, 0x74, 0x1b, 0xa9, 0xa7, 0xca, 0xcd, 0xbb, 0x0f, 0x60, 0x25, 0x77, 0x17, 0xe9, 0x7f,
	0xfa, 0x3b, 0xb0, 0x87, 0x42, 0xd5, 0x52, 0xc4, 0x56, 0xae, 0x88, 0x35, 0xdf, 0x81, 0x2e, 0x23,
	0xfe, 0x4a, 0xb9, 0x9f, 0x55, 0x68, 0x7f, 0x8c, 0xbd, 0xa9, 0x6e, 0xfe, 0x43, 0xb3, 0x65, 0x42,
	0x9b, 0xa3, 0x70, 0xc2, 0xd4, 0xf7, 0x9d, 0xec, 0x56, 0x4e, 0x98, 0x66, 0xeb, 0x1c, 0xc5, 0x51,
	0xea, 0xfb, 0x59, 0x62, 0xc9, 0x98, 0xed, 0x97, 0x8e, 0x99, 0x3e, 0xe8, 0x5a, 0xb9, 0xd4, 0x2d,
	0x25, 0x75, 0x6b, 0x27, 0x8a, 0xfc, 0x4f, 0xd4, 0x4f, 0xf1, 0x9a, 0x11, 0x34, 0xff, 0x87, 0x8e,
	0x6a, 0x50, 0xde, 0x71, 0xf3, 0x35, 0xb4, 0xdf, 0xa2, 0x8f, 0xe5, 0x2d, 0x5b, 0x07, 0xdd, 0x47,
	0x3a, 0x46, 0x27, 0x6b, 0x33, 0x97, 0x9d, 0xd3, 0x6c, 0x90, 0x57, 0x19, 0x05, 0x12, 0x53, 0x21,
	0x14, 0x98, 0xbf, 0xaa, 0xd0, 0x3e, 0x96, 0x9a, 0x57, 0xa0, 0xab, 0xd0, 0xf0, 0x59, 0xc0, 0x72,
	0x4e, 0xdb, 0x76, 0x7e, 0x20, 0x0f, 0xa0, 0x19, 0x9d, 0x9d, 0x71, 0x14, 0x12, 0xb5, 0x6d, 0x17,
	0xa7, 0x09, 0x4b, 0xb5, 0x72, 0x96, 0xea, 0xb7, 0xb1, 0xd4, 0xb8, 0x1b, 0x4b, 0xd7, 0x33, 0xb0,
	0x0d, 0x2b, 0x8c, 0x3b, 0x31, 0x26, 0x01, 0x0d, 0x31, 0x14, 0x0b, 0xf4, 0x5e, 0x67, 0xfc, 0xbd,
	0x0a, 0x2f, 0x21, 0x50, 0xbb, 0x0b, 0x81, 0xdf, 0x2a, 0xd0, 0x51, 0xad, 0x2d, 0x34, 0xf3, 0x0a,
	0x60, 0xa2, 0x19, 0x6e, 0x54, 0x7a, 0xb5, 0x45, 0x44, 0xd3, 0x52, 0xa2, 0xe1, 0xe4, 0x19, 0xd4,
	0xb3, 0xd5, 0x2c, 0x39, 0xd0, 0x07, 0x6b, 0xb3, 0x99, 0x53, 0xab, 0xfb, 0x10, 0x05, 0xb5, 0x65,
	0xe8, 0xe0, 0x47, 0x1d, 0xfe, 0x53, 0x50, 0xc7, 0x98, 0x8c, 0x99, 0x8b, 0xe4, 0x14, 0x9a, 0xf9,
	0xea, 0x21, 0x1b, 0x25, 0xc5, 0x67, 0x16, 0x5d, 0xf7, 0xe9, 0x2d, 0x51, 0xc5, 0x2c, 0x2d, 0x91,
	0x0f, 0x50, 0xcf, 0x56, 0x12, 0x31, 0x4b, 0x12, 0xa6, 0xd6, 0x59, 0xf7, 0xc9, 0x8d, 0x31, 0x13,
	0xc8, 0x23, 0xa8, 0xed, 0xa1, 0x20, 0x8f, 0x4b, 0xa2, 0xaf, 0x76, 0x56, 0xd7, 0xbc, 0x29, 0x64,
	0x82, 0x77, 0x0a, 0xcd, 0x5c, 0x56, 0xa5, 0x6f, 0x9f, 0x59, 0x4b, 0xa5, 0x6f, 0x9f, 0xd3, 0xa6,
	0x04, 0xce, 0xb5, 0x55, 0x0a, 0x3c, 0x23, 0xde, 0x52, 0xe0, 0x39, 0x81, 0x4a, 0xe0, 0x7c, 0x8c,
	0x4a, 0x81, 0x67, 0x04, 0x5c, 0x0a, 0x3c, 0x3b, 0x8b, 0xe6, 0xd2, 0x0e, 0x7c, 0xd6, 0x94, 0x73,
	0xd8, 0x94, 0x33, 0xfd, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x8b, 0x42, 0xa6, 0xe5,
	0x08, 0x00, 0x00,
}
