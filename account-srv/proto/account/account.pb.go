// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xmc-dev/xmc/account-srv/proto/account/account.proto

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/xmc-dev/xmc/account-srv/proto/account/account.proto

It has these top-level messages:
	TypeValue
	Account
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	GetRequest
	GetResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_USER    Type = 0
	Type_SERVICE Type = 1
)

var Type_name = map[int32]string{
	0: "USER",
	1: "SERVICE",
}
var Type_value = map[string]int32{
	"USER":    0,
	"SERVICE": 1,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TypeValue struct {
	Value Type `protobuf:"varint,1,opt,name=value,enum=xmc.srv.account.account.Type" json:"value,omitempty"`
}

func (m *TypeValue) Reset()                    { *m = TypeValue{} }
func (m *TypeValue) String() string            { return proto.CompactTextString(m) }
func (*TypeValue) ProtoMessage()               {}
func (*TypeValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TypeValue) GetValue() Type {
	if m != nil {
		return m.Value
	}
	return Type_USER
}

type Account struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// service or user
	Type Type `protobuf:"varint,2,opt,name=type,enum=xmc.srv.account.account.Type" json:"type,omitempty"`
	// username, service name etc
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	// password
	ClientSecret string `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret" json:"client_secret,omitempty"`
	// name
	Name string `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	// only for services
	OwnerUuid    string `protobuf:"bytes,8,opt,name=owner_uuid,json=ownerUuid" json:"owner_uuid,omitempty"`
	CallbackUrl  string `protobuf:"bytes,9,opt,name=callback_url,json=callbackUrl" json:"callback_url,omitempty"`
	IsFirstParty bool   `protobuf:"varint,10,opt,name=is_first_party,json=isFirstParty" json:"is_first_party,omitempty"`
	IsPublic     bool   `protobuf:"varint,13,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	Scope        string `protobuf:"bytes,12,opt,name=scope" json:"scope,omitempty"`
	// unix timestamps
	CreatedAt int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	RoleId    string `protobuf:"bytes,14,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Account) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Account) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_USER
}

func (m *Account) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Account) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetOwnerUuid() string {
	if m != nil {
		return m.OwnerUuid
	}
	return ""
}

func (m *Account) GetCallbackUrl() string {
	if m != nil {
		return m.CallbackUrl
	}
	return ""
}

func (m *Account) GetIsFirstParty() bool {
	if m != nil {
		return m.IsFirstParty
	}
	return false
}

func (m *Account) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

func (m *Account) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Account) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Account) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Account) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

type CreateRequest struct {
	// uuid will be generated always
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateResponse struct {
	// for services
	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret" json:"client_secret,omitempty"`
	Uuid         string `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CreateResponse) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *CreateResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ReadRequest struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ReadResponse struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type GetRequest struct {
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type GetResponse struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type UpdateRequest struct {
	Uuid         string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret" json:"client_secret,omitempty"`
	CallbackUrl  string `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl" json:"callback_url,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope" json:"scope,omitempty"`
	RoleId       string `protobuf:"bytes,6,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UpdateRequest) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *UpdateRequest) GetCallbackUrl() string {
	if m != nil {
		return m.CallbackUrl
	}
	return ""
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *UpdateRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type DeleteRequest struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type SearchRequest struct {
	Limit       uint32                     `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset      uint32                     `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	ClientId    string                     `protobuf:"bytes,3,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Type        *TypeValue                 `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	OwnerUuid   string                     `protobuf:"bytes,5,opt,name=owner_uuid,json=ownerUuid" json:"owner_uuid,omitempty"`
	CallbackUrl string                     `protobuf:"bytes,6,opt,name=callback_url,json=callbackUrl" json:"callback_url,omitempty"`
	Name        string                     `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	IsPublic    *google_protobuf.BoolValue `protobuf:"bytes,8,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	RoleId      string                     `protobuf:"bytes,9,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *SearchRequest) GetType() *TypeValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *SearchRequest) GetOwnerUuid() string {
	if m != nil {
		return m.OwnerUuid
	}
	return ""
}

func (m *SearchRequest) GetCallbackUrl() string {
	if m != nil {
		return m.CallbackUrl
	}
	return ""
}

func (m *SearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRequest) GetIsPublic() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsPublic
	}
	return nil
}

func (m *SearchRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

type SearchResponse struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SearchResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func init() {
	proto.RegisterType((*TypeValue)(nil), "xmc.srv.account.account.TypeValue")
	proto.RegisterType((*Account)(nil), "xmc.srv.account.account.Account")
	proto.RegisterType((*CreateRequest)(nil), "xmc.srv.account.account.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "xmc.srv.account.account.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "xmc.srv.account.account.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "xmc.srv.account.account.ReadResponse")
	proto.RegisterType((*GetRequest)(nil), "xmc.srv.account.account.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "xmc.srv.account.account.GetResponse")
	proto.RegisterType((*UpdateRequest)(nil), "xmc.srv.account.account.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "xmc.srv.account.account.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "xmc.srv.account.account.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "xmc.srv.account.account.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "xmc.srv.account.account.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "xmc.srv.account.account.SearchResponse")
	proto.RegisterEnum("xmc.srv.account.account.Type", Type_name, Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AccountsService service

type AccountsServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type accountsServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAccountsServiceClient(serviceName string, c client.Client) AccountsServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "xmc.srv.account.account"
	}
	return &accountsServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountsServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountsService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountsService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountsService.Get", in)
	out := new(GetResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountsService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountsService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountsService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountsService service

type AccountsServiceHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Get(context.Context, *GetRequest, *GetResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterAccountsServiceHandler(s server.Server, hdlr AccountsServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AccountsService{hdlr}, opts...))
}

type AccountsService struct {
	AccountsServiceHandler
}

func (h *AccountsService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AccountsServiceHandler.Create(ctx, in, out)
}

func (h *AccountsService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AccountsServiceHandler.Read(ctx, in, out)
}

func (h *AccountsService) Get(ctx context.Context, in *GetRequest, out *GetResponse) error {
	return h.AccountsServiceHandler.Get(ctx, in, out)
}

func (h *AccountsService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.AccountsServiceHandler.Update(ctx, in, out)
}

func (h *AccountsService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.AccountsServiceHandler.Delete(ctx, in, out)
}

func (h *AccountsService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.AccountsServiceHandler.Search(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/xmc-dev/xmc/account-srv/proto/account/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 791 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdd, 0x4e, 0xdb, 0x48,
	0x14, 0xc6, 0xc4, 0x71, 0xe2, 0x93, 0x38, 0x8b, 0x46, 0x68, 0xb1, 0xb2, 0x62, 0x15, 0x0c, 0xbb,
	0xa5, 0x95, 0x70, 0x54, 0x90, 0x5a, 0xa9, 0xaa, 0xaa, 0x02, 0xa5, 0x28, 0xad, 0x54, 0x21, 0xa7,
	0xe1, 0xa2, 0x5c, 0x44, 0x8e, 0x3d, 0x01, 0xab, 0x4e, 0xec, 0x7a, 0xec, 0x00, 0x6f, 0xd2, 0xa7,
	0xa8, 0x7a, 0xdd, 0xa7, 0xab, 0xe6, 0x2f, 0xc4, 0x29, 0x71, 0x90, 0xda, 0x2b, 0x7b, 0xce, 0x9c,
	0xf3, 0xcd, 0xf9, 0xf9, 0xce, 0x07, 0xaf, 0x2e, 0x83, 0xf4, 0x2a, 0x1b, 0xd8, 0x5e, 0x34, 0x6a,
	0xdf, 0x8c, 0xbc, 0x3d, 0x1f, 0x4f, 0xe8, 0xb7, 0xed, 0x7a, 0x5e, 0x94, 0x8d, 0xd3, 0x3d, 0x92,
	0x4c, 0xda, 0x71, 0x12, 0xa5, 0x91, 0xb4, 0xc8, 0xaf, 0xcd, 0xac, 0x68, 0xe3, 0x66, 0xe4, 0xd9,
	0x24, 0x99, 0xd8, 0xd2, 0x2c, 0xbe, 0xcd, 0x7f, 0x2f, 0xa3, 0xe8, 0x32, 0xc4, 0x3c, 0x78, 0x90,
	0x0d, 0xdb, 0xd7, 0x89, 0x1b, 0xc7, 0x38, 0x21, 0x3c, 0xd0, 0x7a, 0x0d, 0xfa, 0xc7, 0xdb, 0x18,
	0x9f, 0xbb, 0x61, 0x86, 0xd1, 0x01, 0x94, 0x27, 0xf4, 0xc7, 0x54, 0x5a, 0xca, 0x6e, 0x63, 0x7f,
	0xd3, 0x5e, 0x80, 0x6a, 0xd3, 0x10, 0x87, 0xfb, 0x5a, 0x5f, 0x4b, 0x50, 0x39, 0xe4, 0x76, 0x84,
	0x40, 0xcd, 0xb2, 0xc0, 0x67, 0xf1, 0xba, 0xc3, 0xfe, 0xd1, 0x53, 0x50, 0xd3, 0xdb, 0x18, 0x9b,
	0xab, 0x0f, 0xc1, 0x64, 0xae, 0xe8, 0x1f, 0xd0, 0xbd, 0x30, 0xc0, 0xe3, 0xb4, 0x1f, 0xf8, 0x66,
	0x89, 0x61, 0x55, 0xb9, 0xa1, 0xe3, 0xa3, 0x6d, 0x30, 0xc4, 0x25, 0xc1, 0x5e, 0x82, 0x53, 0x53,
	0x65, 0x0e, 0x75, 0x6e, 0xec, 0x32, 0x1b, 0x4d, 0x64, 0xec, 0x8e, 0xb0, 0x59, 0xe3, 0x89, 0xd0,
	0x7f, 0xb4, 0x09, 0x10, 0x5d, 0x8f, 0x71, 0xd2, 0x67, 0x29, 0x56, 0xd9, 0x8d, 0xce, 0x2c, 0x3d,
	0x9a, 0xe7, 0x16, 0xd4, 0x3d, 0x37, 0x0c, 0x07, 0xae, 0xf7, 0xb9, 0x9f, 0x25, 0xa1, 0xa9, 0x33,
	0x87, 0x9a, 0xb4, 0xf5, 0x92, 0x10, 0xed, 0x40, 0x23, 0x20, 0xfd, 0x61, 0x90, 0x90, 0xb4, 0x1f,
	0xbb, 0x49, 0x7a, 0x6b, 0x42, 0x4b, 0xd9, 0xad, 0x3a, 0xf5, 0x80, 0xbc, 0xa5, 0xc6, 0x33, 0x6a,
	0xa3, 0xd9, 0x07, 0xa4, 0x1f, 0x67, 0x83, 0x30, 0xf0, 0x4c, 0x83, 0x39, 0x54, 0x03, 0x72, 0xc6,
	0xce, 0x68, 0x1d, 0xca, 0xc4, 0x8b, 0x62, 0x6c, 0xd6, 0x19, 0x3c, 0x3f, 0xd0, 0xd4, 0xbc, 0x04,
	0xbb, 0x29, 0xf6, 0xfb, 0x6e, 0x6a, 0x6a, 0x2d, 0x65, 0xb7, 0xe4, 0xe8, 0xc2, 0x72, 0x98, 0xd2,
	0xeb, 0x2c, 0xf6, 0xe5, 0x75, 0x85, 0x5f, 0x0b, 0xcb, 0x61, 0x8a, 0x36, 0xa0, 0x92, 0x44, 0x21,
	0xa6, 0xcd, 0x6a, 0x30, 0x54, 0x8d, 0x1e, 0x3b, 0xbe, 0xf5, 0x1e, 0x8c, 0x63, 0x06, 0xe2, 0xe0,
	0x2f, 0x19, 0x26, 0x29, 0x7a, 0x01, 0x15, 0xd1, 0x6e, 0x36, 0xa2, 0xda, 0x7e, 0x6b, 0xe1, 0x38,
	0xc4, 0x48, 0x1d, 0x19, 0x60, 0x0d, 0xa1, 0x21, 0xc1, 0x48, 0x1c, 0x8d, 0xc9, 0xdc, 0x98, 0x94,
	0x65, 0x63, 0x5a, 0xbd, 0x7f, 0x4c, 0x6c, 0x18, 0xa5, 0x3b, 0xbe, 0x58, 0x5b, 0x50, 0x73, 0xb0,
	0xeb, 0xcb, 0x94, 0xef, 0xa1, 0x94, 0xf5, 0x0e, 0xea, 0xdc, 0x45, 0x24, 0xf2, 0x3b, 0x65, 0x3d,
	0x06, 0x38, 0xc5, 0xa9, 0x7c, 0xad, 0xa8, 0x24, 0xab, 0x03, 0x35, 0xe6, 0xfa, 0x07, 0x5e, 0xfd,
	0xa6, 0x80, 0xd1, 0x63, 0x03, 0x2c, 0xa8, 0xf3, 0x61, 0x3d, 0x9c, 0xe7, 0x6d, 0xe9, 0x57, 0xde,
	0xca, 0x6d, 0x50, 0x67, 0xb6, 0x61, 0x4a, 0xc4, 0xf2, 0x2c, 0x11, 0x67, 0xa8, 0xa4, 0xe5, 0xa8,
	0xb4, 0x06, 0x0d, 0x99, 0x2f, 0x2f, 0xdf, 0xda, 0x06, 0xe3, 0x0d, 0x0e, 0x71, 0x61, 0x05, 0x34,
	0x4c, 0x3a, 0x89, 0xb0, 0x1f, 0xab, 0x60, 0x74, 0xb1, 0x9b, 0x78, 0x57, 0x32, 0x6e, 0x1d, 0xca,
	0x61, 0x30, 0x0a, 0x78, 0x17, 0x0d, 0x87, 0x1f, 0xd0, 0xdf, 0xa0, 0x45, 0xc3, 0x21, 0x11, 0x45,
	0x1b, 0x8e, 0x38, 0x15, 0x6b, 0xc3, 0x33, 0xa1, 0x35, 0x2a, 0x9b, 0x87, 0x55, 0xa8, 0x35, 0x4c,
	0xf2, 0x84, 0xe0, 0xe4, 0xa5, 0xa1, 0xbc, 0x4c, 0x1a, 0xb4, 0xc5, 0x2d, 0xae, 0xcc, 0xb4, 0xf8,
	0xf9, 0xac, 0x10, 0x54, 0x59, 0x4a, 0x4d, 0x9b, 0xeb, 0xb1, 0x2d, 0xf5, 0xd8, 0x3e, 0x8a, 0xa2,
	0x90, 0xa7, 0x72, 0x27, 0x12, 0x33, 0x53, 0xd0, 0x73, 0x53, 0xf8, 0x00, 0x0d, 0xd9, 0x3b, 0x41,
	0xc2, 0x97, 0x50, 0x15, 0x45, 0x11, 0x53, 0x69, 0x95, 0x1e, 0xc4, 0xc2, 0x69, 0xc4, 0x93, 0x4d,
	0x50, 0x69, 0x2b, 0x50, 0x15, 0xd4, 0x5e, 0xf7, 0xc4, 0x59, 0x5b, 0x41, 0x35, 0xa8, 0x74, 0x4f,
	0x9c, 0xf3, 0xce, 0xf1, 0xc9, 0x9a, 0xb2, 0xff, 0x5d, 0x85, 0xbf, 0x44, 0x10, 0xe9, 0xe2, 0x64,
	0x12, 0x78, 0x18, 0x5d, 0x80, 0xc6, 0x65, 0x00, 0xfd, 0xbf, 0xf0, 0xa1, 0x9c, 0xe8, 0x34, 0x1f,
	0x2d, 0xf5, 0x13, 0xd4, 0x58, 0x41, 0x3d, 0x50, 0xe9, 0x62, 0xa3, 0x9d, 0x85, 0x21, 0x33, 0xd2,
	0xd0, 0xfc, 0x6f, 0x89, 0xd7, 0x14, 0xd6, 0x81, 0xd2, 0x29, 0x4e, 0xd1, 0xf6, 0x42, 0xff, 0x3b,
	0x05, 0x68, 0xee, 0x14, 0x3b, 0x4d, 0x31, 0x2f, 0x40, 0xe3, 0x0b, 0x51, 0xd0, 0x87, 0xdc, 0x86,
	0x17, 0xf4, 0x61, 0x6e, 0xb3, 0x18, 0x38, 0x5f, 0x9b, 0x02, 0xf0, 0xdc, 0xf2, 0x15, 0x80, 0xcf,
	0xed, 0x1f, 0x03, 0xe7, 0x24, 0x2a, 0x00, 0xcf, 0x6d, 0x68, 0x01, 0x78, 0x9e, 0x8d, 0xd6, 0xca,
	0x91, 0xfe, 0x49, 0x6a, 0xdc, 0x40, 0x63, 0x1c, 0x3f, 0xf8, 0x19, 0x00, 0x00, 0xff, 0xff, 0x8c,
	0xde, 0x0c, 0xaa, 0xdc, 0x08, 0x00, 0x00,
}
