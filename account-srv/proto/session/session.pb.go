// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xmc-dev/xmc/account-srv/proto/session/session.proto

/*
Package session is a generated protocol buffer package.

It is generated from these files:
	github.com/xmc-dev/xmc/account-srv/proto/session/session.proto

It has these top-level messages:
	Session
	LoginRequest
	LoginResponse
	ReadRequest
	ReadResponse
	LogoutRequest
	LogoutResponse
*/
package session

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import xmc_srv_account_account "github.com/xmc-dev/xmc/account-srv/proto/account"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Session struct {
	Uuid      string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	ClientId  string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	CreatedAt int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ExpiresAt int64  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Session) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Session) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Session) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Session) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type LoginRequest struct {
	ClientId     string                             `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientSecret string                             `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret" json:"client_secret,omitempty"`
	Type         *xmc_srv_account_account.TypeValue `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *LoginRequest) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *LoginRequest) GetType() *xmc_srv_account_account.TypeValue {
	if m != nil {
		return m.Type
	}
	return nil
}

type LoginResponse struct {
	Session       *Session `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	CredentialsOk bool     `protobuf:"varint,2,opt,name=credentials_ok,json=credentialsOk" json:"credentials_ok,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginResponse) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *LoginResponse) GetCredentialsOk() bool {
	if m != nil {
		return m.CredentialsOk
	}
	return false
}

type ReadRequest struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ReadResponse struct {
	Session *Session `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type LogoutRequest struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LogoutRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type LogoutResponse struct {
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*Session)(nil), "xmc.srv.account.session.Session")
	proto.RegisterType((*LoginRequest)(nil), "xmc.srv.account.session.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "xmc.srv.account.session.LoginResponse")
	proto.RegisterType((*ReadRequest)(nil), "xmc.srv.account.session.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "xmc.srv.account.session.ReadResponse")
	proto.RegisterType((*LogoutRequest)(nil), "xmc.srv.account.session.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "xmc.srv.account.session.LogoutResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for SessionsService service

type SessionsServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...client.CallOption) (*LogoutResponse, error)
}

type sessionsServiceClient struct {
	c           client.Client
	serviceName string
}

func NewSessionsServiceClient(serviceName string, c client.Client) SessionsServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "xmc.srv.account.session"
	}
	return &sessionsServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *sessionsServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SessionsService.Login", in)
	out := new(LoginResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SessionsService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...client.CallOption) (*LogoutResponse, error) {
	req := c.c.NewRequest(c.serviceName, "SessionsService.Logout", in)
	out := new(LogoutResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SessionsService service

type SessionsServiceHandler interface {
	Login(context.Context, *LoginRequest, *LoginResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Logout(context.Context, *LogoutRequest, *LogoutResponse) error
}

func RegisterSessionsServiceHandler(s server.Server, hdlr SessionsServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&SessionsService{hdlr}, opts...))
}

type SessionsService struct {
	SessionsServiceHandler
}

func (h *SessionsService) Login(ctx context.Context, in *LoginRequest, out *LoginResponse) error {
	return h.SessionsServiceHandler.Login(ctx, in, out)
}

func (h *SessionsService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.SessionsServiceHandler.Read(ctx, in, out)
}

func (h *SessionsService) Logout(ctx context.Context, in *LogoutRequest, out *LogoutResponse) error {
	return h.SessionsServiceHandler.Logout(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/xmc-dev/xmc/account-srv/proto/session/session.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xad, 0x69, 0xeb, 0x49, 0x52, 0xd0, 0x5e, 0x88, 0x8c, 0x90, 0xc2, 0x96, 0x40, 0x2f,
	0x5d, 0x4b, 0x41, 0xe2, 0xc0, 0x01, 0xa9, 0xdc, 0x40, 0x48, 0x48, 0x0e, 0x20, 0x04, 0x87, 0xc8,
	0x5d, 0x8f, 0xca, 0xaa, 0x89, 0xd7, 0xec, 0xae, 0x2d, 0xf7, 0x1f, 0xf0, 0x2f, 0xf8, 0xab, 0xc8,
	0xfb, 0x01, 0xa1, 0x22, 0x09, 0x52, 0x4f, 0x63, 0xbd, 0x99, 0x79, 0xef, 0xcd, 0x5b, 0x19, 0x5e,
	0x5d, 0x0a, 0xf3, 0xad, 0xb9, 0x60, 0x5c, 0xae, 0xb2, 0x6e, 0xc5, 0xcf, 0x4a, 0x6c, 0xfb, 0x9a,
	0x15, 0x9c, 0xcb, 0xa6, 0x32, 0x67, 0x5a, 0xb5, 0x59, 0xad, 0xa4, 0x91, 0x99, 0x46, 0xad, 0x85,
	0xac, 0x42, 0x65, 0x16, 0x25, 0x0f, 0xba, 0x15, 0x67, 0x5a, 0xb5, 0xcc, 0x2f, 0x30, 0xdf, 0x4e,
	0xff, 0x9f, 0xd8, 0x23, 0xa1, 0x3a, 0x62, 0xda, 0xc1, 0xe1, 0xdc, 0x51, 0x11, 0x02, 0x71, 0xd3,
	0x88, 0x72, 0x1c, 0x4d, 0xa2, 0xd3, 0x24, 0xb7, 0xdf, 0xe4, 0x21, 0x24, 0x7c, 0x29, 0xb0, 0x32,
	0x0b, 0x51, 0x8e, 0xf7, 0x6c, 0xe3, 0xc8, 0x01, 0x6f, 0x4a, 0xf2, 0x08, 0x80, 0x2b, 0x2c, 0x0c,
	0x96, 0x8b, 0xc2, 0x8c, 0xf7, 0x27, 0xd1, 0xe9, 0x7e, 0x9e, 0x78, 0xe4, 0xdc, 0xf4, 0x6d, 0xec,
	0x6a, 0xa1, 0x50, 0xf7, 0xed, 0xd8, 0xb5, 0x3d, 0x72, 0x6e, 0xe8, 0x8f, 0x08, 0x86, 0xef, 0xe4,
	0xa5, 0xa8, 0x72, 0xfc, 0xde, 0xa0, 0x36, 0x7f, 0x6b, 0x45, 0x37, 0xb4, 0x4e, 0x60, 0xe4, 0x9b,
	0x1a, 0xb9, 0x42, 0xe3, 0xcd, 0x0c, 0x1d, 0x38, 0xb7, 0x18, 0x79, 0x01, 0xb1, 0xb9, 0xae, 0xd1,
	0x5a, 0x19, 0xcc, 0x28, 0xbb, 0x19, 0x5a, 0xa8, 0x1f, 0xae, 0x6b, 0xfc, 0x54, 0x2c, 0x1b, 0xcc,
	0xed, 0x3c, 0x55, 0x30, 0xf2, 0x4e, 0x74, 0x2d, 0x2b, 0x8d, 0xe4, 0x25, 0x1c, 0xfa, 0x80, 0xad,
	0x91, 0xc1, 0x6c, 0xc2, 0x36, 0x3c, 0x00, 0xf3, 0xe9, 0xe5, 0x61, 0x81, 0x4c, 0xe1, 0x98, 0x2b,
	0x2c, 0xb1, 0x32, 0xa2, 0x58, 0xea, 0x85, 0xbc, 0xb2, 0x56, 0x8f, 0xf2, 0xd1, 0x1a, 0xfa, 0xfe,
	0x8a, 0x3e, 0x86, 0x41, 0x8e, 0x45, 0x19, 0x8e, 0xff, 0x47, 0xf8, 0xf4, 0x2d, 0x0c, 0xdd, 0xc8,
	0xed, 0x5d, 0xd1, 0x13, 0x7b, 0xa2, 0x6c, 0xcc, 0x36, 0xc1, 0xfb, 0x70, 0x1c, 0x86, 0x9c, 0xe4,
	0xec, 0xe7, 0x1e, 0xdc, 0xf3, 0x5c, 0x7a, 0x8e, 0xaa, 0x15, 0x1c, 0xc9, 0x67, 0xb8, 0x6b, 0xd3,
	0x22, 0xd3, 0x8d, 0xf2, 0xeb, 0xef, 0x9a, 0x3e, 0xdd, 0x35, 0xe6, 0xb4, 0xe8, 0x1d, 0xf2, 0x11,
	0xe2, 0xfe, 0x60, 0xf2, 0x64, 0xe3, 0xc6, 0x5a, 0x64, 0xe9, 0x74, 0xc7, 0xd4, 0x6f, 0xda, 0xaf,
	0x70, 0xe0, 0xce, 0x22, 0x5b, 0xad, 0xfc, 0x09, 0x27, 0x7d, 0xb6, 0x73, 0x2e, 0x90, 0xbf, 0x4e,
	0xbe, 0x84, 0x8c, 0x2f, 0x0e, 0xec, 0x2f, 0xf5, 0xfc, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a,
	0xbe, 0x9d, 0x37, 0xed, 0x03, 0x00, 0x00,
}
